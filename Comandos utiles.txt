Para conseguir la imagen de docker de MySQL
docker pull mysql

Creamos una red para Kibana y Elastic
docker network create elastic

Conseguimos la imagen de elasticsearch
docker pull docker.elastic.co/elasticsearch/elasticsearch:7.15.2

Conseguimos la imagen de kibana
docker pull docker.elastic.co/kibana/kibana:7.15.2

Corremos el contenedor de Elasticsearch 
docker run --name es01 --net elastic -p 127.0.0.1:9200:9200 -p 127.0.0.1:9300:9300 -e "discovery.type=single-node" docker.elastic.co/elasticsearch/elasticsearch:7.15.2
docker run --name kib01 --net elastic -p 127.0.0.1:5601:5601 -e "ELASTICSEARCH_HOSTS=http://es01:9200" docker.elastic.co/kibana/kibana:7.15.2

Corremos el contenedor utilizando la imagen de MySQL 
docker run --name=Docker_Punto_de_Venta --net elastic -p 3308:3306 -e MYSQL_ROOT_PASSWORD=root -d mysql:latest

Corremos el comando para crear la imagen del dockerfile
docker build -t devopspython .

Corremos el contenedor de la app
docker run --name devopspython --net elastic devopspython

** Verificar que el .txt que se utilice sea la versión para producción (Prod) **

================================================================
COMANDOS ESTRAS
//Utilizamos desde nuestro dispositivo Host la IP para acceder a la BD e insertar los datos para la DB correspondiente
-h 0.0.0.0:3308 -u root -p root -d

Conectar a CLI de contenedor
docker exec -it Docker_Punto_de_Venta /bin/bash

Cerrar la interfaz CLI de docker
ctrl + d

Desde el contenedor de nuestra base de datos, con esto nos conectamos al servidor MySQL
mysql -u root -p

docker network ls

docker network create elastic

docker network inspect elastic